{
	"info": {
		"_postman_id": "709953be-c114-4908-8ee9-5521d8749616",
		"name": "taskmanager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32286476"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "user  register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"kareem\",\n    \"email\": \"test.55@test.com\",\n    \"password\": \"StrongP@ssw0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test.5@test.com\",\n    \"password\": \"StrongP@ssw0rd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "profile",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5OTI3MjAsImV4cCI6MTc1Nzk5NjMyMH0.GG9SH50xf7g0u6ULK9O25KvuMkYCurHO1YyEF46bjS2upCNzEhipp6h02mgQaciy",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/profile",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI1IiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5ODg0NDksImV4cCI6MTc1Nzk5MjA0OX0.zLWJrm8W-iFprinnpJpX8Jdqk99QXL270Y1TxjdbngE_SpuU87DmBWMw-hKqqjDz",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tasks",
			"item": [
				{
					"name": "all tasks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5OTI3MjAsImV4cCI6MTc1Nzk5NjMyMH0.GG9SH50xf7g0u6ULK9O25KvuMkYCurHO1YyEF46bjS2upCNzEhipp6h02mgQaciy",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "get task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI2IiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5Nzk4ODYsImV4cCI6MTc1Nzk4MzQ4Nn0.mE3OvBRddDK6za-RHmLbjPBTYvNyc68z9_tubMZTiBm9iCDmjOKmLnDd2EaQQwON",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/tasks/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"3"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "create task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiIxIiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5OTI3MjAsImV4cCI6MTc1Nzk5NjMyMH0.GG9SH50xf7g0u6ULK9O25KvuMkYCurHO1YyEF46bjS2upCNzEhipp6h02mgQaciy",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"test three\",\n    \"description\": \"test descripiton\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "update task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI2IiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5Nzk4ODYsImV4cCI6MTc1Nzk4MzQ4Nn0.mE3OvBRddDK6za-RHmLbjPBTYvNyc68z9_tubMZTiBm9iCDmjOKmLnDd2EaQQwON",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"test three with update\",\n    \"description\": \"test descripiton with update\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"3"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "change status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI2IiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5Nzk4ODYsImV4cCI6MTc1Nzk4MzQ4Nn0.mE3OvBRddDK6za-RHmLbjPBTYvNyc68z9_tubMZTiBm9iCDmjOKmLnDd2EaQQwON",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/tasks/1/status?taskStatus=IN_PROGRESS",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"1",
								"status"
							],
							"query": [
								{
									"key": "taskStatus",
									"value": "IN_PROGRESS"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzM4NCJ9.eyJzdWIiOiI2IiwidXNlcm5hbWUiOiJrYXJlZW0iLCJpYXQiOjE3NTc5Nzk4ODYsImV4cCI6MTc1Nzk4MzQ4Nn0.mE3OvBRddDK6za-RHmLbjPBTYvNyc68z9_tubMZTiBm9iCDmjOKmLnDd2EaQQwON",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/tasks/3",
							"host": [
								"{{url}}"
							],
							"path": [
								"tasks",
								"3"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:8080/api",
			"type": "string"
		}
	]
}